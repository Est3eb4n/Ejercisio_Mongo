// Brice√±o_Esteban

// ----------------------------------------- INSERTONE ---------------------------------------//

db.account.insertOne({
    "accountNumber": "1010",
    "client": {
      "identificationType": "CC",
      "identificationNumber": "2010",
      "firstName": "Manuela",
      "surname": "Moncada",
      "email": "Mmoncada@comtrek.com",
      "phone": "+57 879 517 2135"
    },
    "mainCurrency": "usd",
    "currencies": [
      "cop",
      "usd"
    ],
    "movements": [
      {
        "type": "withdrawal",
        "amount": 282,
        "date": "2025-05-10T03:36:55 +05:00"
      },
      {
        "type": "withdrawal",
        "amount": 986,
        "date": "2025-01-14T09:39:15 +05:00"
      }
    ],
    "registered": "2025-02-28T07:37:02 +05:00",
    "active": true
}), // insercion de un archivo
db.account.insertOne({
    "accountNumber": "1011",
    "client": {
      "identificationType": "CE",
      "identificationNumber": "5230",
      "firstName": "Yallita",
      "surname": "Yuritza",
      "email": "Yuritza@comtrek.com",
      "phone": "+57 879 517 1234"
    },
    "mainCurrency": "usd",
    "currencies": [
      "cop",
      "usd"
    ],
    "movements": [
      {
        "type": "withdrawal",
        "amount": 282,
        "date": "2025-01-10T03:36:55 +05:00"
      },
      {
        "type": "withdrawal",
        "amount": 986,
        "date": "2025-01-14T09:39:15 +05:00"
      }
    ],
    "registered": "2025-02-28T07:37:02 +05:00",
    "active": true
}), // insercion de un archivo
db.account.insertOne({
    "accountNumber": "1012",
    "client": {
      "identificationType": "CC",
      "identificationNumber": "2011",
      "firstName": "Homer",
      "surname": "Simpson",
      "email": "Hsimpson@comtrek.com",
      "phone": "+57 879 517 4567"
    },
    "mainCurrency": "cop",
    "currencies": [
      "cop",
      "usd"
    ],
    "movements": [
      {
        "type": "withdrawal",
        "amount": 282,
        "date": "2025-06-10T03:36:55 +05:00"
      },
      {
        "type": "withdrawal",
        "amount": 986,
        "date": "2025-01-14T09:39:15 +05:00"
      }
    ],
    "registered": "2025-02-28T07:37:02 +05:00",
    "active": true
})  // insercion de un archivo

//----------------------------------------- INSERTMANY ---------------------------------------//

db.account.insertMany(
[
    {
        "accountNumber": "1013",
        "client": {
        "identificationType": "CC",
        "identificationNumber": "2013",
        "firstName": "Morgana",
        "surname": "Moncada",
        "email": "Mmoncada@comtrek.com",
        "phone": "+57 879 517 1235"
    },
        "mainCurrency": "cop",
        "currencies": [
        "cop",
        "usd"
    ],
        "movements": [
      {
        "type": "withdrawal",
        "amount": 282,
        "date": "2025-05-10T03:36:55 +05:00"
      },
      {
        "type": "withdrawal",
        "amount": 986,
        "date": "2025-01-14T09:39:15 +05:00"
      }
    ],
        "registered": "2025-02-28T07:37:02 +05:00",
        "active": true
    },
    {
        "accountNumber": "1014",
        "client": {
        "identificationType": "CE",
        "identificationNumber": "2014",
        "firstName": "Meme",
        "surname": "Monces",
        "email": "Mmonces@comtrek.com",
        "phone": "+57 879 517 2135"
    },
        "mainCurrency": "usd",
        "currencies": [
        "cop",
        "usd"
    ],
        "movements": [
      {
        "type": "withdrawal",
        "amount": 282,
        "date": "2025-05-10T03:36:55 +05:00"
      },
      {
        "type": "withdrawal",
        "amount": 986,
        "date": "2025-01-14T09:39:15 +05:00"
      }
    ],
        "registered": "2025-02-28T07:37:02 +05:00",
        "active": true
    },
    {
        "accountNumber": "1015",
        "client": {
        "identificationType": "CC",
        "identificationNumber": "2015",
        "firstName": "Lorenso",
        "surname": "Moncada",
        "email": "Lmoncada@comtrek.com",
        "phone": "+57 879 751 2135"
    },
        "mainCurrency": "cop",
        "currencies": [
        "cop",
        "usd"
    ],
        "movements": [
      {
        "type": "withdrawal",
        "amount": 282,
        "date": "2025-05-10T03:36:55 +05:00"
      },
      {
        "type": "withdrawal",
        "amount": 986,
        "date": "2025-01-14T09:39:15 +05:00"
      }
    ],
        "registered": "2025-02-28T07:37:02 +05:00",
        "active": true
    }]); //insercion de multiples archivos

db.account.insertMany(
[
    {
        "accountNumber": "1016",
        "client": {
        "identificationType": "CE",
        "identificationNumber": "2020",
        "firstName": "Esteban",
        "surname": "Esfer",
        "email": "Eesfer@comtrek.com",
        "phone": "+57 879 517 1235"
    },
        "mainCurrency": "cop",
        "currencies": [
        "cop",
        "usd"
    ],
        "movements": [
      {
        "type": "withdrawal",
        "amount": 282,
        "date": "2025-12-10T03:36:55 +05:00"
      },
      {
        "type": "withdrawal",
        "amount": 986,
        "date": "2025-01-14T09:39:15 +05:00"
      }
    ],
        "registered": "2025-02-28T07:37:02 +05:00",
        "active": true
    },
    {
        "accountNumber": "1017",
        "client": {
        "identificationType": "CC",
        "identificationNumber": "1041",
        "firstName": "Maria",
        "surname": "Mosjica",
        "email": "Mosjica@comtrek.com",
        "phone": "+57 879 753 2135"
    },
        "mainCurrency": "usd",
        "currencies": [
        "cop",
        "usd"
    ],
        "movements": [
      {
        "type": "withdrawal",
        "amount": 282,
        "date": "2025-06-10T03:36:55 +05:00"
      },
      {
        "type": "withdrawal",
        "amount": 986,
        "date": "2025-01-14T09:39:15 +05:00"
      }
    ],
        "registered": "2025-02-28T07:37:02 +05:00",
        "active": true
    },
    {
        "accountNumber": "1015",
        "client": {
        "identificationType": "CC",
        "identificationNumber": "2015",
        "firstName": "Lorenso",
        "surname": "Moncada",
        "email": "Lmoncada@comtrek.com",
        "phone": "+57 879 751 2135"
    },
        "mainCurrency": "cop",
        "currencies": [
        "cop",
        "usd"
    ],
        "movements": [
      {
        "type": "withdrawal",
        "amount": 282,
        "date": "2025-05-10T03:36:55 +05:00"
      },
      {
        "type": "withdrawal",
        "amount": 986,
        "date": "2025-01-14T09:39:15 +05:00"
      }
    ],
        "registered": "2025-02-28T07:37:02 +05:00",
        "active": true
    }]); //insercion de multiples archivos+
    
db.account.insertMany(
[
    {
        "accountNumber": "1023",
        "client": {
        "identificationType": "CC",
        "identificationNumber": "2085",
        "firstName": "Laura",
        "surname": "Espocito",
        "email": "Lespocito@comtrek.com",
        "phone": "+57 159 517 1235"
    },
        "mainCurrency": "usd",
        "currencies": [
        "cop",
        "usd"
    ],
        "movements": [
      {
        "type": "withdrawal",
        "amount": 282,
        "date": "2025-05-10T03:36:55 +05:00"
      },
      {
        "type": "withdrawal",
        "amount": 986,
        "date": "2025-01-14T09:39:15 +05:00"
      }
    ],
        "registered": "2025-02-28T07:37:02 +05:00",
        "active": true
    },
    {
        "accountNumber": "3250",
        "client": {
        "identificationType": "CE",
        "identificationNumber": "2095",
        "firstName": "Albert",
        "surname": "Torres",
        "email": "Atorres@comtrek.com",
        "phone": "+57 258 517 2135"
    },
        "mainCurrency": "usd",
        "currencies": [
        "cop",
        "usd"
    ],
        "movements": [
      {
        "type": "withdrawal",
        "amount": 282,
        "date": "2025-03-10T03:36:55 +05:00"
      },
      {
        "type": "withdrawal",
        "amount": 986,
        "date": "2025-01-14T09:39:15 +05:00"
      }
    ],
        "registered": "2025-02-28T07:37:02 +05:00",
        "active": true
    },
    {
        "accountNumber": "3625",
        "client": {
        "identificationType": "CC",
        "identificationNumber": "1598",
        "firstName": "Natalia",
        "surname": "Angarita",
        "email": "Nangarita@comtrek.com",
        "phone": "+57 235 751 2135"
    },
        "mainCurrency": "usd",
        "currencies": [
        "cop",
        "usd"
    ],
        "movements": [
      {
        "type": "withdrawal",
        "amount": 282,
        "date": "2025-05-10T03:36:55 +05:00"
      },
      {
        "type": "withdrawal",
        "amount": 986,
        "date": "2025-01-14T09:39:15 +05:00"
      }
    ],
        "registered": "2025-02-28T07:37:02 +05:00",
        "active": true
    }]); //insercion de multiples archivos

//----------------------------------------- FINDONE ------------------------------------------//

db.accounts.find({accountNumber:"1010"});
db.accounts.find({identificationNumber:"5230"});
db.accounts.find({email:"Hsimpson@comtrek.com"});

//----------------------------------------- FINDMANY ------------------------------------------//

db.accounts.find({accountNumber:{$gt:"1013"}});
db.accounts.find({identificationNumber: {$eq: "2020"},{_id: 0, identificationNumber: 1, mainCurrency: 1}});
db.accounts.find({Lespocito@comtrek.com:"usd"}).count;

//------------------------------------------- PING --------------------------------------------//

//Verifica la conecctividad con la base de datos
db.runCommand({ping:1});

//----------------------------------------- COLsTATS ------------------------------------------//

//Detalla la informacion relevante sobre la coleccion

db.collection.stats()

//----------------------------------------- DBSTATS ------------------------------------------//

// proporciona estadisticas detalladas acerca de una base de datos especifica

db.stats()

//---------------------------------------- db.RunCommand() ------------------------------------//

//se utiliza para verificar si el servidor est√° en funcionamiento y 
// para obtener informaci√≥n b√°sica sobre el estado del servidor.

db.runCommand({hello: 1});

//----------------------------------------- show dbs ------------------------------------------//

// Se emplea para listar las bases de datos disponibles en un servidor

db. show dbs();

//------------------------------------- show collections --------------------------------------//

// permite visualizar una lista que contiene todas 
// las colecciones existentes en una base de datos espec√≠fica.

show collection()

//------------------------------------- show collections --------------------------------------//

// sirve para posicionarce en la base de datos deseada

use()

//---------------------------------------- insertOne ------------------------------------------//

// Sirve para insertar un documento

db.collection.insertOne({"name":"Product 1", "description":"This is the first product."})

//------------------------------------- createCollection --------------------------------------//

db.createCollection("log",{capped: true, size: 1000000});

//------------------------------------------- drop --------------------------------------------//

// Srive para eliminar una coleccion especifica de una base de datos

db.collection.drop();

//--------------------------------------- dropDataBase ----------------------------------------//

// Sirve para eliminar una base de datos completa

db. dropDataBase();

//---------------------------------------- insertMany -----------------------------------------//

db.<nombre_de_colecci√≥n>.insertMany([
  { "campo1": "valor1", "campo2": "valor2" },
  { "campo1": "valor3", "campo2": "valor4" },
  { "campo1": "valor5", "campo2": "valor6" }
]);

//------------------------------------------ $push --------------------------------------------//

// el operador $push permite agregar un elemento al array

db.inventory.updateOne(
    //query
    {_id: 4},
    {
        //operador
        $push: { // se agrage tags
            tags: "headphone"
        }
    }
)

//------------------------------------------  --------------------------------------------//

// serive para consultar todos los documentos de una coleccion

db.collection.find([<query>],[proyection],[<options>])

//  proyeccion

db.usuarios.find(
//filtro
  { "edad": { $gt: 25 } },

//Projection
  { "_id": 0, "nombre": 1, "edad": 1 }
);

//---------------------- Consultas usando los operadores $eq y $ne ------------------------//

use("mi_db")

db.inventory.drop()

db.inventory.insertMany([
  { _id: 1, item: { name: "ab", code: "123" }, qty: 15, tags: ["A", "B", "C"] },
  { _id: 2, item: { name: "cd", code: "123" }, qty: 20, tags: ["B"] },
  { _id: 3, item: { name: "ij", code: "456" }, qty: 25, tags: ["A", "B"] },
  { _id: 4, item: { name: "xy", code: "456" }, qty: 30, tags: ["B", "A"] },
  { _id: 5, item: { name: "mn", code: "000" }, qty: 20, tags: [["A", "B"], "C"] },
])

db.inventory.find()


//        Consultas usando los operadores $eq y $ne - Operador $ne

{ <campo>: { $ne: <valor> } }

use("mi_db")

db.inventory.find({qty: { $eq:25}})

//--------------------------------- Lectura de Datos - Consultas a subdocumentos--------------//

use("mi_db")

db.inventory.find(
    // query
    {
        "item.code": { $eq: "456" }
    },
    
    // proyecci√≥n
    { "item": 1 }
)

//---------- Lectura de Datos - Consultas usando los operadores $gt, $gte, $lt y $lte ---------//

//Sintaxis general para $gt (Mayor que (greater than)).
{ <campo>: { $gt: <valor> } }

//Sintaxis general para $gte (Mayor o igual que (greater than or equal)).
{ <campo>: { $gte: <valor> } }

//Sintaxis general para $lt (Menor que (less than)).
{ <campo>: { $lt: <valor> } }

//Sintaxis general para $lte (Menor o igual que (less than or equal)).
{ <campo>: { $lte: <valor> } }

// Actualizaci√≥n de Datos - Actualizaci√≥n con operadores de Arrays

use("mi_db")

db.inventory.drop()

db.inventory.insertMany([
  { _id: 1, item: { name: "item ab", code: "123", description : "Single line description."    }, qty: 15, tags: [ "school", "book", "bag", "headphone", "appliance" ], },
  { _id: 2, item: { name: "item cd", code: "123", description : "First line\nSecond line"     }, qty: 20, tags: [ "appliance", "school", "book" ] },
  { _id: 3, item: { name: "item ij", code: "456", description : "Many spaces before     line" }, qty: 25, tags: [ "school", "book" ] },
  { _id: 4, item: { name: "item xy", code: "456", description : "Multiple\nline description"  }, qty: 30, tags: [ "electronics", "school" ] },
  { _id: 5, item: { name: "item mn", code: "000" }, qty: 20, tags: [ "appliance", "school" ] },
])

db.inventory.find()

//Agregar elementos a un array con $push

use("mi_db")

db.inventory.updateOne(
    //query
    {_id: 4},
    {
        //operador
        $push: {
            tags: "headphone"
        }
    }
)

use("mi_db")

db.inventory.updateOne({_id: 4}, {
  $push: {
    tags:{
      $each:["headphone","wireless"]
    }
  }
})
db.inventory.find({_id: 4})

// Quitar elementos de un Array con $pull

use("mi_db")

db.inventory.updateMany(
    //query
    {},
    //operadores
    {  
        $pull: {
            tags: "book"
        }
    }
)

// Modificar varios elementos de un array con $in o $pullAlll

// Si se desea eliminar varios elementos de un array se pueden usar los operadores $in o $pullAll.


use("mi_db")

db.inventory.updateMany(
    //query
    {},

    //operadores
    {  
        $pull: {
            tags:  {
                $in: ["appliance", "scholl"]
            }
        }
}
)

// Actualizaci√≥n e inserci√≥n en un mismo comando (upsert)

use("mi_db")

db.iot.insertOne({
    sensor: "S001",
    fecha: "2023-01-02",
    lecturas: [78]
})

db.iot.updateOne({
    sensor: "S001",
    fecha: "2023-01-02",
}, {
    $push: {
        lecturas: 75
    }
})

use("mi_db")
db.iot.find()

//Sintaxis general del comando upsert.

db.<nombre_de_colecci√≥n>.updateOne(
<filtro>,
<operaci√≥n_de_actualizaci√≥n>,
{ upsert: true }
);

// Actualizaci√≥n de varios documentos con el operador $unset

use("sample_training")

db.zips.updateMany(
    //consulta
    { city: "CLEVELAND"},
    
    //operadores de actualizaci√≥n
    {
        $unset: {
            my_data: 1
        }
    }
)

// Actualizaci√≥n de varios documentos con el operador $rename

use("sample_training")

db.zips.updateMany(
    //consulta
    { city: "CLEVELAND"},
    
    //operadores de actualizaci√≥n
    {
        $rename: {
            miAttr: "my_data"
        }
    }
)

//Actualizaci√≥n de varios documentos con el operador $set

use("sample_training")

db.zips.updateMany(
    //consulta
    { city: "CLEVELAND"},
    
    //operadores de actualizaci√≥n
    {
        $set: {
            miAttr: "hola mundo"
        }
    }
)

// Actualizaci√≥n de Datos - Operadores para actualizaci√≥n de documentos

// Los operadores $set y $inc fueron vistos anteriormente, pero estos no son los √∫nicos operadores que hay. La siguiente tabla resume alguno de los operadores m√°s usados:



Operador
$inc

Descripci√≥n
Incrementa un valor num√©rico en una cantidad espec√≠fica.

Ejemplo
{ $inc: { "cantidad": 5 } }



Operador
$mul

Descripci√≥n
Multiplica un valor num√©rico por un factor espec√≠fico.

Ejemplo
{ $mul: { "precio": 1.1 } }



Operador
$rename

Descripci√≥n
Cambia el nombre de un atributo.

Ejemplo
{ $rename: { "viejo_nombre": "nuevo_nombre" } }



Operador
$set

Descripci√≥n
Asigna un valor espec√≠fico a un atributo.

Ejemplo
{ $set: { "estado": "activo" } }



Operador
$unset

Descripci√≥n
Elimina un atributo de un documento.

Ejemplo
{ $unset: { "campo": 1 } }



Operador
$min

Descripci√≥n
Actualiza un atributo con el valor m√≠nimo si es mayor.

Ejemplo
{ $min: { "puntuaci√≥n": 90 } }



Operador
$max

Descripci√≥n
Actualiza un atributo con el valor m√°ximo si es menor.

Ejemplo
{ $max: { "cantidad": 100 } }



Operador
$currentDate

Descripci√≥n
Establece un atributo con la fecha y hora actual.

Ejemplo
{ $currentDate: { "ultima_actualizaci√≥n": true } }


Operador
$addToSet

Descripci√≥n
A√±ade un valor a un conjunto si no existe.

Ejemplo
{ $addToSet: { "etiquetas": "nuevo" } }



Operador
$pop

Descripci√≥n
Elimina el primer o √∫ltimo valor de un conjunto.

Ejemplo
{ $pop: { "colores": -1 } }



Operador
$pull

Descripci√≥n
Elimina un valor espec√≠fico de un conjunto.

Ejemplo
{ $pull: { "intereses": "m√∫sica" } }



Operador
$push

Descripci√≥n
A√±ade un valor a un conjunto.

Ejemplo
{ $push: { "comentarios": "Nuevo comentario" } }



Operador
$pullAll

Descripci√≥n
Elimina varios valores espec√≠ficos de un conjunto.

Ejemplo
{ $pullAll: { "etiquetas": ["antiguo", "usado"] } }

// Actualizaci√≥n de varios documentos de una colecci√≥n mediante updateMany()

db.<nombre_de_colecci√≥n>.updateMany(
  <filtro>,
  <operaci√≥n_de_actualizaci√≥n>
);

use("sample_training")

db.zips.updateMany(
    //consulta
    { city: "CLEVELAND"},
    
    //operadores de actualizaci√≥n
    {
        $inc: {
            pop: 10000
        }
}
)

// Actualizaci√≥n de un documento en una colecci√≥n mediante updateOne() - ObjectID

use("mi_db")
db.productos.insertOne({
        nombre: "Producto 5",
        precio: 500
})

use("mi_db")

db.productos.updateOne(
    //query
    {_id: ObjectId('654a7c051f0bf1efd9ebbed0')},

    //operaciones de actualizaci√≥n
    {
        $set: {
            nombre: "Prod. 5",
            "tag": ['A', 'B', 'C']},
        $inc: {
            precio: -100,
        }
    }
)

// Actualizaci√≥n de un documento en una colecci√≥n mediante updateOne()-$inc

use("mi_db")

db.productos.updateOne(
    //query
    {_id: 2},

    //operaciones de actualizaci√≥n
    {
        $inc: {
            precio: 300,
        }
    }
)

// Eliminaci√≥n de Datos - Eliminar bases de datos con dropDatabases

use <nombre_de_la_base_de_datos> // Cambia a la base de datos que deseas eliminar
db.dropDatabase()
use("mi_db")
db.dropDatabase()